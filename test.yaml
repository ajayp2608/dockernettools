apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"secret.reloader.stakater.com/reload":"backend,firebase"},"labels":{"app.kubernetes.io/instance":"backend","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"backend"},"name":"backend","namespace":"storyfire"},"spec":{"selector":{"matchLabels":{"app.kubernetes.io/instance":"backend","app.kubernetes.io/name":"backend"}},"template":{"metadata":{"labels":{"app.kubernetes.io/instance":"backend","app.kubernetes.io/name":"backend"}},"spec":{"containers":[{"image":"937607034339.dkr.ecr.us-west-2.amazonaws.com/storyfire-backend-prd:latest","name":"backend"}]}}}}
    secret.reloader.stakater.com/reload: backend,firebase
  creationTimestamp: "2022-01-21T21:05:56Z"
  generation: 7
  labels:
    app.kubernetes.io/instance: backend
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: backend
    app.kubernetes.io/version: latest
    helm.sh/chart: backend-latest
  name: backend
  namespace: storyfire
  resourceVersion: "230357161"
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: backend
      app.kubernetes.io/name: backend
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: backend
        app.kubernetes.io/name: backend
    spec:
      containers:
      - env:
        - name: ENABLE_TRACE
          value: "true"
        - name: DD_LOGS_ENABLED
          value: "true"
        - name: KUBE_DEPLOYMENT_NAME
          value: backend
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KUBE_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: DD_AGENT_HOST
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: PORT
          value: "8080"
        envFrom:
        - secretRef:
            name: backend
        image: 937607034339.dkr.ecr.us-west-2.amazonaws.com/storyfire-backend-prd:f00f133dbbf575a3427d471b638f9c24d099a6d6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /app/ping
            port: http
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        name: backend
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /app/ping
            port: http
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 768Mi
          requests:
            cpu: 500m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /app/dist/config/keys/
          name: firebase
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir: {}
        name: tmp
      - name: firebase
        secret:
          defaultMode: 420
          secretName: firebase
